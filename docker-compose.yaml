version: "3"
services:
  app:
    build: ./app/
    image: app-api:v1
    env_file:
      - ./app/.env
    volumes:
      - ./app:/app
    depends_on:
      - db
#      - rpc_server
  web:
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
      - db

 # rpc_server:
 #   build: ./rpc_server/
 #   image: rpc-server:v1
 #   scale: 1
 #   env_file:
 #     - ./rpc_server/.env
 #   #    environment:
 #   #      RABBITMQ_HOST: ${RABBITMQ_HOST}
 #   #      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
 #   #      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
 #   #      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
 #   depends_on:
 #     - rabbitmq
 #   restart: always
 # rabbitmq:
 #   image: rabbitmq:3-management
 #   container_name: rabbitmq
 #   ports:
 #     - "5672:5672" # Порт для приложений (AMQP)
 #     - "15672:15672" # Веб-интерфейс (Management)
 #   environment:
 #     RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
 #     RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
 #   volumes:
 #     - ./rabbitmq:/var/lib/rabbitmq
 #   #command: >
 #   #  sh -c "rabbitmq-plugins enable rabbitmq_management && rabbitmq-server"
 #   restart: on-failure
 #   healthcheck:
 #     test: [ "CMD", "rabbitmqctl", "status" ]
 #     interval: 10s
 #     timeout: 10s
 #     retries: 5
 #     start_period: 30s
  db:
    image: postgres:16-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    #expose:
    #  - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=sa
